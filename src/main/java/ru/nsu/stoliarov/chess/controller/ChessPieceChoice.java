package ru.nsu.stoliarov.chess.controller;

import ru.nsu.stoliarov.chess.model.pieces.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class ChessPieceChoice extends JDialog {
	private JPanel contentPane;
	private JButton buttonOK;
	private JRadioButton knightButton;
	private JRadioButton bishopButton;
	private JRadioButton rookButton;
	private JRadioButton queenButton;
	private MainWindow mainWindow;
	private Piece pawn;
	
	public ChessPieceChoice(MainWindow mainWindow, Piece pawn) {
		this.mainWindow = mainWindow;
		this.pawn = pawn;
		
		setSize(350, 200);
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		setLocation((screenSize.width - getWidth()) / 2, (screenSize.height - getHeight()) / 2);
		
		setContentPane(contentPane);
		getRootPane().setDefaultButton(buttonOK);
		queenButton.setSelected(true);
		
		initListeners();
		
		// does this dialog unclosable
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent windowEvent) {
				dispose();
				ChessPieceChoice chessPieceChoice = new ChessPieceChoice(mainWindow, pawn);
				chessPieceChoice.setVisible(true);
			}
		});
	}
	
	/**
	 * Initialisation of listeners.
	 */
	private void initListeners() {
		buttonOK.addActionListener(e -> onOK());
		
		knightButton.addActionListener(actionEvent -> {
			bishopButton.setSelected(false);
			rookButton.setSelected(false);
			queenButton.setSelected(false);
		});
		
		bishopButton.addActionListener(actionEvent -> {
			knightButton.setSelected(false);
			rookButton.setSelected(false);
			queenButton.setSelected(false);
		});
		
		rookButton.addActionListener(actionEvent -> {
			bishopButton.setSelected(false);
			knightButton.setSelected(false);
			queenButton.setSelected(false);
		});
		
		queenButton.addActionListener(actionEvent -> {
			bishopButton.setSelected(false);
			rookButton.setSelected(false);
			knightButton.setSelected(false);
		});
	}
	
	private void onOK() {
		Piece newPiece;
		
		if(queenButton.isSelected()) {
			newPiece = new Queen(pawn.getX(), pawn.getY(), pawn.getKey(), pawn.getPieceColor(), pawn.getKing());
		} else if(rookButton.isSelected()) {
			newPiece = new Rook(pawn.getX(), pawn.getY(), pawn.getKey(), pawn.getPieceColor(), pawn.getKing());
		} else if(bishopButton.isSelected()) {
			newPiece = new Bishop(pawn.getX(), pawn.getY(), pawn.getKey(), pawn.getPieceColor(), pawn.getKing());
		} else {
			newPiece = new Knight(pawn.getX(), pawn.getY(), pawn.getKey(), pawn.getPieceColor(), pawn.getKing());
		}
		
		newPiece.setGameField(mainWindow.getGameField());
		
		mainWindow.getGameField().replacePawn(newPiece);
		mainWindow.repaint();
		
		dispose();
	}
	
	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}
	
	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 */
	private void $$$setupUI$$$() {
		contentPane = new JPanel();
		contentPane.setLayout(new GridBagLayout());
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new GridBagLayout());
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.weightx = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.ipady = 30;
		contentPane.add(panel1, gbc);
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new GridBagLayout());
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 0;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		panel1.add(panel2, gbc);
		buttonOK = new JButton();
		buttonOK.setText("OK");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.ipadx = 20;
		gbc.ipady = 1;
		panel2.add(buttonOK, gbc);
		final JPanel spacer1 = new JPanel();
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.ipadx = 240;
		panel1.add(spacer1, gbc);
		final JPanel spacer2 = new JPanel();
		gbc = new GridBagConstraints();
		gbc.gridx = 3;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.ipadx = 5;
		panel1.add(spacer2, gbc);
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new GridBagLayout());
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		contentPane.add(panel3, gbc);
		final JPanel spacer3 = new JPanel();
		gbc = new GridBagConstraints();
		gbc.gridx = 3;
		gbc.gridy = 3;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.ipadx = 180;
		panel3.add(spacer3, gbc);
		bishopButton = new JRadioButton();
		bishopButton.setText("Bishop");
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 4;
		gbc.anchor = GridBagConstraints.WEST;
		panel3.add(bishopButton, gbc);
		rookButton = new JRadioButton();
		rookButton.setText("Rook");
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 5;
		gbc.anchor = GridBagConstraints.WEST;
		panel3.add(rookButton, gbc);
		queenButton = new JRadioButton();
		queenButton.setText("Queen");
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 6;
		gbc.anchor = GridBagConstraints.WEST;
		panel3.add(queenButton, gbc);
		knightButton = new JRadioButton();
		knightButton.setText("Knight");
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 3;
		gbc.anchor = GridBagConstraints.WEST;
		panel3.add(knightButton, gbc);
		final JLabel label1 = new JLabel();
		label1.setText("Choose the chess piece instead the pawn");
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 1;
		gbc.gridwidth = 3;
		gbc.anchor = GridBagConstraints.WEST;
		panel3.add(label1, gbc);
		final JPanel spacer4 = new JPanel();
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 4;
		gbc.fill = GridBagConstraints.VERTICAL;
		panel3.add(spacer4, gbc);
		final JPanel spacer5 = new JPanel();
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 2;
		gbc.anchor = GridBagConstraints.SOUTH;
		panel3.add(spacer5, gbc);
		final JPanel spacer6 = new JPanel();
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.VERTICAL;
		gbc.ipady = 5;
		panel3.add(spacer6, gbc);
	}
	
	/** @noinspection ALL */
	public JComponent $$$getRootComponent$$$() {
		return contentPane;
	}
}
